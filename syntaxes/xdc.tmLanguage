<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC 'Teros Technology' 'http://www.terostech.com'>
<plist>
    <dict>
        <key>fileTypes</key>
        <array>
            <string>xdc</string>
            <string>XDC</string>
            <string>SDC</string>
            <string>sdc</string>
        </array>
        <key>name</key>
        <string>xdcconstraints</string>
        <key>foldingStartMarker</key>
        <string>\{\s*$</string>
        <key>foldingStopMarker</key>
        <string>^\s*\}</string>
        <key>keyEquivalent</key>
        <string>^~T</string>
        <key>name</key>
        <string>SDC</string>
        <key>patterns</key>
        <array>

            <dict>
                <key>name</key>
                <string>keyword.sdc.timing.const</string>
                <key>match</key>
                <string>\b(create_clock|create_generated_clock|
                group_path|set_clock_groups|set_clock_latency|set_clock_sense|
                set_clock_uncertainty|set_data_check|set_disable_timing|
                set_input_delay|set_max_time_borrow|set_output_delay|
                set_propagated_clock|add|add_delay|asynchronous|capacitance|clock|clock_fall|
                decimal_places|divide_by|end|edge_rise|lib_cell|fall|fall_from|
                fall_to|from|from_clock|group|hold|include_generated_clock|library|
                logically_exclusive|master_clock|max|min|multiply_by|name|of_objects|
                offset|period|phase|physically_exclusive|picofarads|picoseconds|
                pin_load|edge_fall|input|output|port|rise|ris|pin|rise_from|rise_to|
                section_id|setup|setup|source|through|time|to|to_clock|unit|waveform)\b</string>
            </dict>

            <dict>
                <key>name</key>
                <string>keyword.sdc.timing.exceptions</string>
                <key>match</key>
                <string>\b(set_false_path|set_max_delay|set_min_delay|set_multicycle_path)\b</string>
            </dict>

            <dict>
                <key>name</key>
                <string>keyword.sdc.logic</string>
                <key>match</key>
                <string>\b(set_case_analysis|set_logic_dc|set_logic_one|set_logic_zero)\b</string>
            </dict>

            <dict>
                <key>name</key>
                <string>keyword.sdc.access</string>
                <key>match</key>
                <string>\b(all_clocks|all_fanin|all_fanout|all_inputs|all_outputs|
                all_registers|current_design|get_cells|get_clocks|get_nets|
                get_pins|get_ports|get_timing_arcs|get_timing_paths)\b</string>
            </dict>

            <dict>
                <key>name</key>
                <string>keyword.sdc.general</string>
                <key>match</key>
                <string>\b(current_instance|set_hierarchy_separator|set_units|foreach_in_collection)\b</string>
            </dict>

            <dict>
                <key>name</key>
                <string>keyword.sdc.wireload</string>
                <key>match</key>
                <string>\b(set_wire_load_min_block_size|set_wire_load_mode|
                set_wire_load_model|set_wire_load_selection_group)\b</string>
            </dict>

            <dict>
                <key>name</key>
                <string>keyword.sdc.set</string>
                <key>match</key>
                <string>\b(set_drive|set_driving_cell|set_fanout_load|
                set_input_transition|set_port_fanout_number|
                set_max_capacitance|set_min_capacitance|set_max_fanout|
                set_max_transition|set_clock_gating_check|set_clock_transition|
                set_ideal_latency|set_ideal_network|set_ideal_transition|
                set_resistance|set_timing_derate|
                set_max_area|create_voltage_area|set_level_shifter_strategy|
                set_level_shifter_threshold|set_max_dynamic_power|
                set_max_leakage_power|create_timing_netlist|update_timing_netlist)\b</string>
            </dict>

            <dict>
                <key>name</key>
                <string>keyword.xdc.operating</string>
                <key>match</key>
                <string>\b(report_operating_conditions|reset_operating_conditions)\b</string>
            </dict>

            <dict>
                <key>name</key>
                <string>keyword.xdc.timing</string>
                <key>match</key>
                <string>\b(set_input_jitter|set_external_delay|set_system_jitter)\b</string>
            </dict>

            <dict>
                <key>name</key>
                <string>keyword.xdc.access</string>
                <key>match</key>
                <string>\b(set_logic_unconnected|all_cpus|all_dsps|all_ffs|all_hsios|all_latches|all_rams|
                get_generated_clocks|get_iobanks|get_package_pins|get_path_groups|get_sites|filter|set_property|
                get_hierarchy_separator)\b</string>
            </dict>

            <dict>
                <key>name</key>
                <string>keyword.xdc.floorplan</string>
                <key>match</key>
                <string>\b(add_cells_to_pblock|create_pblock|delete_pblock|get_pblocks|
                remove_cells_from_pblock|resize_pblock)\b</string>
            </dict>

            <dict>
                <key>name</key>
                <string>keyword.xdc.power</string>
                <key>match</key>
                <string>\b(set_default_switching_activity|set_power_opt|set_switching_activity)\b</string>
            </dict>

            <dict>
                <key>name</key>
                <string>keyword.xdc.pin</string>
                <key>match</key>
                <string>\b(set_package_pin_val)\b</string>
            </dict>

            <dict>
                <key>name</key>
                <string>keyword.xdc.constant</string>
                <key>match</key>
                <string>\b(NO|YES|FALSE|TRUE|DISABLE|ENABLE|NONE|BACKBONE|SLOW|FAST|DONTCARE|
                NORMAL|HIGH|IBUF|IFD|BOTH|HALT|CONTINUE|CORRECT_AND_CONTINUE|
                CORRECT_AND_HALT|PRE_COMPUTED|FIRST_READBACK|
                DIFF_HSTL_I|DIFF_HSTL_II|DIFF_HSTL_II_18|DIFF_HSTL_II_DCI|
                DIFF_HSTL_II_DCI_18|DIFF_HSTL_II_T_DCI|DIFF_HSTL_II_T_DCI_18|
                DIFF_HSTL_II__T_DCI|DIFF_HSTL_I_18|DIFF_HSTL_I_DCI|
                DIFF_HSTL_I_DCI_18|DIFF_HSUL_12_DCI|DIFF_SSTL12_DCI|
                DIFF_SSTL12_T_DCI|DIFF_SSTL135|DIFF_SSTL135_DCI|DIFF_SSTL135_R|
                DIFF_SSTL135_T_DCI|DIFF_SSTL15|DIFF_SSTL15_DCI|DIFF_SSTL15_R|
                DIFF_SSTL15_T_DCI|DIFF_SSTL18_I|DIFF_SSTL18_II|DIFF_SSTL18_II_DCI|
                DIFF_SSTL18_II_T_DCI|DIFF_SSTL18_I_DCI|HSLVDCI_15|HSLVDCI_18|HSTL_I|
                HSTL_II|HSTL_II_18|HSTL_II_DCI|HSTL_II_DCI_18|HSTL_II_T_DCI|
                HSTL_II_T_DCI_18|HSTL_I_18|HSTL_I_DCI|HSTL_I_DCI_18|HSUL_12_DCI|
                LVCMOS12|LVCMOS18|LVCMOS25|LVCMOS33|LVDCI_15|LVDCI_18|LVDCI_DV2_15|LVDS|
                LVDCI_DV2_18|SSTL12_DCI|SSTL12_T_DCI|SSTL135|SSTL135_DCI|SSTL135_R|
                SSTL135_T_DCI|SSTL15|SSTL15_DCI|SSTL15_R|SSTL15_T_DCI|SSTL18_I|
                SSTL18_II|SSTL18_II_DCI|SSTL18_II_T_DCI|SSTL18_I_DCI|
                TUNED_SPLIT|UNTUNED_SPLIT_25|UNTUNED_SPLIT_40|UNTUNED_SPLIT_50|
                UNTUNED_SPLIT_60|UNTINED_SPLIT_75|TUNED|UNTUNED_25|UNTUNED_50|
                UNTUNED_75)\b</string>
            </dict>

            <dict>
                <key>name</key>
                <string>keyword.xdc.parameters</string>
                <key>match</key>
                <string>\b(ASYNC_REG|BEL|BLACK_BOX|BUFFER_TYPE|CFGBVS|CLOCK_BUFFER_TYPE|
                CLOCK_DEDICATED_ROUTE|CLOCK_REGION|CLOCK_ROOT|CONFIG_MODE|
                CONFIG_VOLTAGE|CONTAIN_ROUTING|DCI_CASCADE|DELAY_BYPASS|
                DIFF_TERM|DIFF_TERM_ADV|DIRECT_ENABLE|DIRECT_RESET|DONT_TOUCH|DRIVE|
                EDIF_EXTRA_SEARCH_PATHS|EQUALIZATION|EXCLUDE_PLACEMENT|FSM_ENCODING|
                FSM_SAFE_STATE|GATED_CLOCK|H_SET|HIODELAY_GROUP|HLUTNM|HU_SET|
                IBUF_LOW_PWR|IN_TERM|INTERNAL_VREF|IO_BUFFER_TYPE|IOB|IOBDELAY|
                IODELAY_GROUP|IOSTANDARD|IP_REPO_PATHS|KEEP|KEEP_COMPATIBLE|
                KEEP_HIERARCHY|KEEPER|LOC|LOCK_PINS|LUTNM|LVDS_PRE_EMPHASIS|
                MARK_DEBUG|MAX_FANOUT|ODT|OFFSET_CNTRL|PACKAGE_PIN|PATH_MODE|PBLOCK|
                POST_CRC|POST_CRC_ACTION|POST_CRC_FREQ|POST_CRC_INIT_FLAG|
                POST_CRC_SOURCE|PRE_EMPHASIS|PROHIBIT|PULLDOWN|PULLUP|REF_NAME|
                REF_PIN_NAME|RLOC|RLC_ORIGIN|RLOCS|ROUTE_STATUS|RPM|RPM_GRID|SLEW|
                U_SET|USE_DSP48|USED_IN|VCCAUX_IO)\b</string>
            </dict>

            <dict>
                <key>name</key>
                <string>storage.type.sdc</string>
                <key>match</key>
                <string>(-add_delay|-end|-clock_fall|-clock|-to|-from|-max|-min|-name|-no_duplicates|-source|-period|-level_sensitive|-edge_triggered|-hierarchical|-sdc|-hsc|-quiet|-regexp|-nocase|-exact|-filter|-of_objects|-waveform|-add|-edges|-divide_by|-multiply_by|-duty_cycle|-invert|-edge_shift|-master_clock|-setup|-hold|-rise|-fall|-high|-low|-late|-early|-rise_from|-fall_from|-rise_to|-fall_to|-add_delay|-clock_fall|-network_latency_included|-source_latency_included|-through|-pin|-from_pin|-input_transition_rise|-input_transition_fall|-library|-lib_cell|-substract_pin_load|-wire_load|-pin_load|-max_library|-min_library|-group|-asynchronous|-nowarn|-create_base_clocks)</string>
            </dict>
            <dict>
                <key>begin</key>
                <string>(?&lt;=^|;)\s*((#))</string>
                <key>beginCaptures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>comment.line.number-sign.tcl</string>
                    </dict>
                    <key>2</key>
                    <dict>
                        <key>name</key>
                        <string>punctuation.definition.comment.tcl</string>
                    </dict>
                </dict>
                <key>contentName</key>
                <string>comment.line.number-sign.tcl</string>
                <key>end</key>
                <string>\n</string>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>match</key>
                        <string>(\\\\|\\\n)</string>
                    </dict>
                </array>
            </dict>
            <dict>
                <key>captures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>keyword.control.tcl</string>
                    </dict>
                </dict>
                <key>match</key>
                <string>(?&lt;=^|[\[{;])\s*(if|while|for|catch|return|break|continue|switch|exit|foreach)\b</string>
            </dict>
            <dict>
                <key>captures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>keyword.control.tcl</string>
                    </dict>
                </dict>
                <key>match</key>
                <string>(?&lt;=^|})\s*(then|elseif|else)\b</string>
            </dict>
            <dict>
                <key>captures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>keyword.other.tcl</string>
                    </dict>
                    <key>2</key>
                    <dict>
                        <key>name</key>
                        <string>entity.name.function.tcl</string>
                    </dict>
                </dict>
                <key>match</key>
                <string>^\s*(proc)\s+([^\s]+)</string>
            </dict>
            <dict>
                <key>captures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>keyword.other.tcl</string>
                    </dict>
                </dict>
                <key>match</key>
                <string>(?&lt;=^|[\[{;])\s*(after|append|array|auto_execok|auto_import|auto_load|auto_mkindex|auto_mkindex_old|auto_qualify|auto_reset|bgerror|binary|cd|clock|close|concat|dde|encoding|eof|error|eval|exec|expr|fblocked|fconfigure|fcopy|file|fileevent|filename|flush|format|gets|glob|global|history|http|incr|info|interp|join|lappend|library|lindex|linsert|list|llength|load|lrange|lreplace|lsearch|lset|lsort|memory|msgcat|namespace|open|package|parray|pid|pkg::create|pkg_mkIndex|proc|puts|pwd|re_syntax|read|registry|rename|resource|scan|seek|set|socket|SafeBase|source|split|string|subst|Tcl|tcl_endOfWord|tcl_findLibrary|tcl_startOfNextWord|tcl_startOfPreviousWord|tcl_wordBreakAfter|tcl_wordBreakBefore|tcltest|tclvars|tell|time|trace|unknown|unset|update|uplevel|upvar|variable|vwait|set_operating_conditions|set_wire_load_min_block_size|set_wire_load_mode|set_wire_load_model|set_wire_load_selection_group|set_drive|set_driving_cell|set_fanout_load|set_input_transition|set_load|set_port_fanout_number|set_max_capacitance|set_max_fanout|set_max_transition|set_min_capacitance|create_clock|create_generated_clock|set_clock_gating_checkset_clock_latencyset_clock_transitionset_clock_uncertaintyset_data_check|set_disable_timing|set_input_delay|set_max_time_borrow|set_output_delay|set_propagated_clock|set_resistance|set_false_path|set_max_delay|set_min_delay|set_multicycle_path|set_max_area|set_max_dynamic_power|set_max_leakage_power|set_min_porosity|set_case_analysis|set_logic_dc|set_logic_one|set_logic_zero|current_design|get_clocks|get_registers|get_ports|all_clocks|get_cells|get_pins|get_nets|get_libs|get_lib_cells|get_collection_size|get_lib_pins|derive_pll_clocks|derive_clock_uncertainty|set_clock_groups)\b</string>
            </dict>
            <dict>
                <key>match</key>
                <string>\b(?i)(\d+\s*(fs|ps|ns|us|ms|s)?)\b</string>
                <key>name</key>
                <string>constant.numeric.ucf</string>
            </dict>
            <dict>
                <key>begin</key>
                <string>(?&lt;=^|[\[{;])\s*(regexp|regsub)\b\s*</string>
                <key>beginCaptures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>keyword.other.tcl</string>
                    </dict>
                </dict>
                <key>comment</key>
                <string>special-case regexp/regsub keyword in order to handle the expression</string>
                <key>end</key>
                <string>[\n;\]]</string>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>match</key>
                        <string>\\(?:.|\n)</string>
                        <key>name</key>
                        <string>constant.character.escape.tcl</string>
                    </dict>
                    <dict>
                        <key>comment</key>
                        <string>switch for regexp</string>
                        <key>match</key>
                        <string>-\w+\s*</string>
                    </dict>
                    <dict>
                        <key>applyEndPatternLast</key>
                        <integer>1</integer>
                        <key>begin</key>
                        <string>--\s*</string>
                        <key>comment</key>
                        <string>end of switches</string>
                        <key>end</key>
                        <string></string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#regexp</string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#regexp</string>
                    </dict>
                </array>
            </dict>
            <dict>
                <key>include</key>
                <string>#escape</string>
            </dict>
            <dict>
                <key>include</key>
                <string>#variable</string>
            </dict>
            <dict>
                <key>begin</key>
                <string>"</string>
                <key>beginCaptures</key>
                <dict>
                    <key>0</key>
                    <dict>
                        <key>name</key>
                        <string>punctuation.definition.string.begin.tcl</string>
                    </dict>
                </dict>
                <key>end</key>
                <string>"</string>
                <key>endCaptures</key>
                <dict>
                    <key>0</key>
                    <dict>
                        <key>name</key>
                        <string>punctuation.definition.string.end.tcl</string>
                    </dict>
                </dict>
                <key>name</key>
                <string>string.quoted.double.tcl</string>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#escape</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#variable</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#embedded</string>
                    </dict>
                </array>
            </dict>
            
        </array>
        <key>repository</key>
        <dict>
            <key>bare-string</key>
            <dict>
                <key>begin</key>
                <string>(?:^|(?&lt;=\s))"</string>
                <key>comment</key>
                <string>matches a single quote-enclosed word without scoping</string>
                <key>end</key>
                <string>"([^\s\]]*)</string>
                <key>endCaptures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>invalid.illegal.tcl</string>
                    </dict>
                </dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#escape</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#variable</string>
                    </dict>
                </array>
            </dict>
            <key>braces</key>
            <dict>
                <key>begin</key>
                <string>(?:^|(?&lt;=\s))\{</string>
                <key>comment</key>
                <string>matches a single brace-enclosed word</string>
                <key>end</key>
                <string>\}([^\s\]]*)</string>
                <key>endCaptures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>invalid.illegal.tcl</string>
                    </dict>
                </dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>match</key>
                        <string>\\[{}\n]</string>
                        <key>name</key>
                        <string>constant.character.escape.tcl</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#inner-braces</string>
                    </dict>
                </array>
            </dict>
            <key>embedded</key>
            <dict>
                <key>begin</key>
                <string>\[</string>
                <key>beginCaptures</key>
                <dict>
                    <key>0</key>
                    <dict>
                        <key>name</key>
                        <string>punctuation.section.embedded.begin.tcl</string>
                    </dict>
                </dict>
                <key>end</key>
                <string>\]</string>
                <key>endCaptures</key>
                <dict>
                    <key>0</key>
                    <dict>
                        <key>name</key>
                        <string>punctuation.section.embedded.end.tcl</string>
                    </dict>
                </dict>
                <key>name</key>
                <string>source.tcl.embedded</string>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>source.tcl</string>
                    </dict>
                </array>
            </dict>
            <key>escape</key>
            <dict>
                <key>match</key>
                <string>\\(\d{1,3}|x[a-fA-F0-9]+|u[a-fA-F0-9]{1,4}|.|\n)</string>
                <key>name</key>
                <string>constant.character.escape.tcl</string>
            </dict>
            <key>inner-braces</key>
            <dict>
                <key>begin</key>
                <string>\{</string>
                <key>comment</key>
                <string>matches a nested brace in a brace-enclosed word</string>
                <key>end</key>
                <string>\}</string>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>match</key>
                        <string>\\[{}\n]</string>
                        <key>name</key>
                        <string>constant.character.escape.tcl</string>
                    </dict>
                    <dict>
                        <key>include</key>
                        <string>#inner-braces</string>
                    </dict>
                </array>
            </dict>
            <key>regexp</key>
            <dict>
                <key>begin</key>
                <string>(?=\S)(?![\n;\]])</string>
                <key>comment</key>
                <string>matches a single word, named as a regexp, then swallows the rest of the command</string>
                <key>end</key>
                <string>(?=[\n;\]])</string>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>begin</key>
                        <string>(?=[^ \t\n;])</string>
                        <key>end</key>
                        <string>(?=[ \t\n;])</string>
                        <key>name</key>
                        <string>string.regexp.tcl</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#braces</string>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#bare-string</string>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#escape</string>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#variable</string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>begin</key>
                        <string>[ \t]</string>
                        <key>comment</key>
                        <string>swallow the rest of the command</string>
                        <key>end</key>
                        <string>(?=[\n;\]])</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#variable</string>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#embedded</string>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#escape</string>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#braces</string>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#string</string>
                            </dict>
                        </array>
                    </dict>
                </array>
            </dict>
            <key>string</key>
            <dict>
                <key>applyEndPatternLast</key>
                <integer>1</integer>
                <key>begin</key>
                <string>(?:^|(?&lt;=\s))(?=")</string>
                <key>comment</key>
                <string>matches a single quote-enclosed word with scoping</string>
                <key>end</key>
                <string></string>
                <key>name</key>
                <string>string.quoted.double.tcl</string>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>include</key>
                        <string>#bare-string</string>
                    </dict>
                </array>
            </dict>
            <key>variable</key>
            <dict>
                <key>captures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>punctuation.definition.variable.tcl</string>
                    </dict>
                </dict>
                <key>match</key>
                <string>(\$)((?:[a-zA-Z0-9_]|::)+(\([^\)]+\))?|\{[^\}]*\})</string>
                <key>name</key>
                <string>variable.other.tcl</string>
            </dict>
        </dict>
        <key>scopeName</key>
        <string>source.xdcconstraints</string>
        <key>uuid</key>
        <string>13ae410f-19a5-4269-a50d-300e639a7b95</string>
    </dict>
</plist>
